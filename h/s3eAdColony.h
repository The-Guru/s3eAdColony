/*
 * (C) 2001-2012 Marmalade. All Rights Reserved.
 *
 * This document is protected by copyright, and contains information
 * proprietary to Marmalade.
 *
 * This file consists of source code released by Marmalade under
 * the terms of the accompanying End User License Agreement (EULA).
 * Please do not use this program/source code before you have read the
 * EULA and have agreed to be bound by its terms.
 */
/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
#ifndef S3E_EXT_ADCOLONY_H
#define S3E_EXT_ADCOLONY_H

#include <s3eTypes.h>

typedef enum s3eAdColonyCallback
{
	S3E_ADCOLONY_VIRTUAL_CURRENCY_AWARDED_BY_ZONE,
	S3E_ADCOLONY_TAKEOVER_BEGAN_FOR_ZONE,
	S3E_ADCOLONY_TAKEOVER_ENDED_FOR_ZONE,
	S3E_ADCOLONY_TAKEOVER_NOT_SERVED_FOR_ZONE,

	S3E_ADCOLONY_CALLBACK_MAX

} s3eAdColonyCallback;
// \cond HIDDEN_DEFINES
S3E_BEGIN_C_DECL
// \endcond

/**
 * Returns S3E_TRUE if the AdColony extension is available.
 */
s3eBool s3eAdColonyAvailable();

/**
 * Registers a callback to be called for an operating system event.
 *
 * The available callback types are listed in @ref s3eAdColonyCallback.
 * @param cbid ID of the event for which to register.
 * @param fn callback function.
 * @param userdata Value to pass to the @e userdata parameter of @e NotifyFunc.
 * @return
 *  - @ref S3E_RESULT_SUCCESS if no error occurred.
 *  - @ref S3E_RESULT_ERROR if the operation failed.\n
 *
 * @see s3eAdColonyUnRegister
 * @note For more information on the system data passed as a parameter to the callback
 * registered using this function, see the @ref s3eAdColonyCallback enum.
 */
s3eResult s3eAdColonyRegister(s3eAdColonyCallback cbid, s3eCallback fn, void* userData);

/**
 * Unregister a callback for a given event.
 * @param cbid ID of the callback for which to register.
 * @param fn Callback Function.
 * @return
 * - @ref S3E_RESULT_SUCCESS if no error occurred.
 * - @ref S3E_RESULT_ERROR if the operation failed.\n
 * @note For more information on the systemData passed as a parameter to the callback
 * registered using this function, see the s3eAdColonyCallback enum.
 * @note It is not necessary to define a return value for any registered callback.
 * @see s3eAdColonyRegister
 */
s3eResult s3eAdColonyUnRegister(s3eAdColonyCallback cbid, s3eCallback fn);

/**
 * Must be called before using any other function
 */
void s3eAdColonyStart();

/**
 * Playback without in app currency
 */
void s3ePlayVideoAdForSlot( int slotNumber );

void s3ePlayVideoAdForZone( const char* pszZoneID );

/**
 * Playback with in app currency
 */
void s3ePlayV4VCForSlot( int slotNumber, s3eBool PrePopup, s3eBool PostPopup );

void s3ePlayV4VCForZone( const char* pszZoneID, s3eBool PrePopup, s3eBool PostPopup );

s3eBool s3eVideoAdCurrentlyRunning();

S3E_END_C_DECL

#endif /* !S3E_EXT_ADCOLONY_H */
